name: Build kernel

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      defconfig:
        description: 'Defconfig file name'
        required: true
        default: 'blossom_defconfig'
      branch:
        description: 'Repository Branch'
        required: true
        default: 'enanan'
      tag_name:
        description: 'Tag name'
        required: true
        default: 'r1'
      upload_releases:
        description: 'Upload releases'
        required: true
        default: 'false'
        type: boolean
      mark_prerelease:
        description: 'Mark as prerelease'
        required: true
        default: 'true'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    permissions:
      contents: write
    env:
      # Set BRANCH_NAME based on the event type
      BRANCH_NAME: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref_name }}
      UPLOAD_RELEASES: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.upload_releases || 'false' }}
      MARK_PRERELEASE: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.mark_prerelease || 'false' }}
      DEFCONFIG: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.defconfig || 'blossom_defconfig' }}
    steps:

    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
        
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        ref: ${{ env.BRANCH_NAME }}
        fetch-depth: 1
        
    - name: Kernel build deps
      run: |
        sudo apt update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python3
#        sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1
#        sudo update-alternatives --set python /usr/bin/python2.7

    - name: Download gcc
      run: |
        git clone https://github.com/djb77/aarch64-linux-android-4.9 ../aarch64-linux-android-4.9

    - name: Add ksu and build kernel
      run: |
        curl -LSs "https://raw.githubusercontent.com/mlm-games/KernelSU-Non-GKI/main/kernel/setup-subm.sh" | bash -s 
        python3 KernelSU/scripts/integrate-no-kprobe.py ${{ env.DEFCONFIG }}
        ./build_kernel.sh ${{ env.DEFCONFIG }}
    
    
    - name: Creating AnyKernel3 zip
      run: |
        ./KernelSU/scripts/kernel_zipper.sh

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      if: inputs.upload_releases == false || github.event_name != 'workflow_dispatch'
      with:
        name: RuskKernel-${{ github.event.repository.name }}
        path: |
          *.zip

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      if: github.event_name == 'workflow_dispatch' && inputs.upload_releases == true
      with:
        files: |
          *ernel*.zip
        name: Kernel Flashable zip // ${{ inputs.tag_name }}
        tag_name: ${{ inputs.tag_name }}
        body: |
          Flash using custom recovery or Kernel Flasher Apps from F-Droid
        prerelease: ${{ inputs.mark_prerelease }}

      
